@model UserLoginDto

@{
    ViewData["Title"] = "Log in";
    var returnUrl = @Context.Request.Query["returnurl"];
}

<h1>Log in</h1>

@if (TempData.ContainsKey(MVC.Controllers.UserController.SKEY_REGISTERED)
   && (bool)TempData[MVC.Controllers.UserController.SKEY_REGISTERED])
{
    await Html.RenderPartialAsync("_AlertPartial", new AlertViewModel { Type = AlertType.Success, Message = "Successfully registered. Please log in to start using the website." });
}

@if (TempData.ContainsKey(MVC.Controllers.UserController.SKEY_BANNED)
   && (bool)TempData[MVC.Controllers.UserController.SKEY_BANNED])
{
    await Html.RenderPartialAsync("_AlertPartial", new AlertViewModel { Type = AlertType.Error, Message = "You can't log in because you have been banned." });
}

<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Login" asp-route-returnurl="@returnUrl">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" type="email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input type="submit" value="Log in" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
